type msg <ocaml from="TypesMandarine"> = abstract

type date = float

type etat_signature   = [ NonSigne | Signe of (float*string) list (* (date * user)  list*) ] <ocaml repr="classic">
type etat_coffre      = [ NonProtege | Protege_le_par of (float*string) list (* (date * user)  list*) ] <ocaml repr="classic">

type classif_tags_t  = {
  type_classif  			: string;
  auteur_login 				: string;
  publique 		        	: bool;
  valeur 				: string;
} 


type metaData_cwb   = {
  classif_tags 		 : classif_tags_t list;
  etat_coffre_fichier    : etat_coffre;
  etat_signature_fichier : etat_signature;
  empreinte_shaFichier   : string;
 }


type partage = {
	nodeidlien 	: string;
	nodeidoriginal  : string;
	date_partage 	: string;
}

type utilisateur_cercle = {
  prenom 			: string;
  nom  			: string;
  login    			: string;
  listePartages <ocaml mutable> : partage list;
} <ocaml field_prefix="cercle_">
 

type cercle_type = [ CercleLibre | CercleEditionContrat | CercleSignatureContrat ]  <ocaml repr="classic">


type cercleInfos  = {
 nom_cercle    				: string;
 idCercle 				: string;
 type_cercle 				: cercle_type;
 createur 				: string;
 date_creation_cercle 			: string;
 liste_utilisateurs <ocaml mutable>	: utilisateur_cercle list; 
}


type piece = {
	nom_logique_piece : string;
	tags_piece : string list;
	id_piece : string;
	isInFolder : bool;
}
		
type unepiece = { piece : piece }


type etat_contrat = [ Etat_Edition | Etat_Signature | Etat_Vie | Etat_Echu | Etat_Obsolete ] <ocaml repr="classic">

type dossierInfos = {
	titre_dossier_logique 		: string;
	createur_dossier 		: string;
 	cercles_dossier 		: string list; (*En pr√©vision des uuid*)
	taux_completude 		: float;
	etat_dossier 			: etat_contrat;
	echeance 			: date;
	liste_pieces  			: unepiece list; (*nomPIece * nodeid*)
}




type releve_information_cercle = cercleInfos list 



   
type itemFS = {
  author 		: string;
  createPermission 	: bool;
  created 		: string;
  creator 		: string;
  droits 		: string;
  id  			: string;
  isLink 		: bool;
  linkTo 		: string;
  isFolder 		: bool;
  mimetype 		: string;
  modified 		: string;
  modifier 		: string;
  miniature 		: string;
  nodeType 		: string;
  parentId 		: string;
  pathAlf 		: string;
  size 			: int;
  nomfichier 		: string;
  version 		: string;
  versionable 		: bool;
  messages_recus	: msg list;
  messages_envoyes	: msg list;
  infosDossier 		: dossierInfos list;
  cercles     		: cercleInfos list;
  etatSignatureCoffre   : metaData_cwb;
  children <ocaml mutable> : itemFS list
} 

type arborescenceCowebo = itemFS list

